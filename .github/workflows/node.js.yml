# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master", "next-[0-9]+.[0-9]+" ]
  pull_request:
    branches: [ "master", "next-[0-9]+.[0-9]+" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      NODE_ENV: development
      COMPOSE_FILE: docker-compose.test.yml

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies for CI
      run: npm ci

    - name: Verify linting code
      run: npm run lint

    - name: build
      run: npm run build --if-present

    - name: Build docker image for Test
      run: docker-compose -f docker-compose.test.yml build --no-cache
    
    - name: Apply migrations for DB
      run: docker-compose -f docker-compose.test.yml run --rm server yarn prisma migrate deploy --experimental --create-db --auto-approve

    - name: Run tests
      run: docker-compose -f docker-compose.test.yml run --rm server yarn jest -i
